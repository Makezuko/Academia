CREATE TABLE alunos(
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    nome VARCHAR2(50) NOT NULL,
    email VARCHAR2(50) NOT NULL UNIQUE,
    senha VARCHAR2(100) NOT NULL,
    telefone VARCHAR2(20) NOT NULL,
    plano VARCHAR2(20) NOT NULL
);

CREATE TABLE frequencia (
    ID_frequencia NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    CPF_aluno CHAR(15) NOT NULL,
    CPF_aluno CHAR(15) NOT NULL,
    data_entrada DATE NOT NULL,
    hora_entrada TIMESTAMP NOT NULL,
    hora_saida TIMESTAMP,
    CONSTRAINT FK_Aluno_Frequencia FOREIGN KEY (CPF_aluno) REFERENCES alunos(cpf)
);

CREATE TABLE administradores (
    ID_admin NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    nome VARCHAR2(50),
    email VARCHAR2(50) UNIQUE,
    senha VARCHAR2(100)
);

CREATE TABLE relatorio (
    ID_relatorio NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    CPF_aluno CHAR(15) NOT NULL,
    CPF_aluno CHAR(15) NOT NULL,
    data_referencia DATE NOT NULL,
    total_horas NUMBER(5, 2) DEFAULT 0,
    classificacao VARCHAR2(50),
    CONSTRAINT FK_Aluno_Relatorio FOREIGN KEY (CPF_aluno) REFERENCES alunos(cpf)
);

INSERT INTO frequencia (CPF_aluno, data_entrada, hora_entrada, hora_saida)
VALUES (
    '239.514.258-14',                          -- CPF do aluno
    TO_DATE('20-11-2024', 'DD-MM-YYYY'),       -- data de entrada
    TO_TIMESTAMP('20-11-2024 09:00:00', 'DD-MM-YYYY HH24:MI:SS'),  -- hora de entrada
    TO_TIMESTAMP('20-11-2024 16:30:00', 'DD-MM-YYYY HH24:MI:SS')   -- hora de saída
);

INSERT INTO frequencia (CPF_aluno, data_entrada, hora_entrada, hora_saida)
VALUES (
    '239.514.258-14',
    TO_DATE('19-11-2024', 'DD-MM-YYYY'),
    TO_TIMESTAMP('19-11-2024 07:45:00', 'DD-MM-YYYY HH24:MI:SS'),
    TO_TIMESTAMP('19-11-2024 18:15:00', 'DD-MM-YYYY HH24:MI:SS')
);

SELECT
    a.nome AS nome_aluno,
    COUNT(f.ID_frequencia) AS quantidade_visitas,
    SUM(
        CASE
            WHEN f.hora_saida IS NOT NULL THEN
                (EXTRACT(HOUR FROM (f.hora_saida - f.hora_entrada)) +
                EXTRACT(MINUTE FROM (f.hora_saida - f.hora_entrada)) / 60 +
                EXTRACT(SECOND FROM (f.hora_saida - f.hora_entrada)) / 3600)
            ELSE
                0
        END
    ) AS tempo_total
FROM
    frequencia f
JOIN
    alunos a ON TRIM(f.CPF_aluno) = TRIM(a.cpf)  -- Adicionando TRIM() para remover espaços extras
WHERE
    TRIM(f.CPF_aluno) = :cpfAluno  -- Usando TRIM() também na condição WHERE
    AND f.data_entrada >= TO_TIMESTAMP(:startDate || ' 00:00:00', 'DD-MM-YYYY HH24:MI:SS')
    AND f.data_entrada < TO_TIMESTAMP(:endDate || ' 23:59:59', 'DD-MM-YYYY HH24:MI:SS')
GROUP BY
    a.nome;


SELECT *
FROM alunos
WHERE TRIM(cpf) = :cpfAluno;


SELECT cpf, nome FROM alunos;


DROP TABLE alunos;
DROP TABLE frequencia;
DROP TABLE administradores;
DROP TABLE relatorio;

